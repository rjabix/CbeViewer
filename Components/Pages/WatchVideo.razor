@page "/watch/{Folder}/{File}"

@rendermode InteractiveServer
@inject IJSRuntime JSRuntime
<h3>Watch Video</h3>

<video id="video-player" controls style="width: 100%; max-height: 800px; background-color: black;" data-folder="@Folder" data-file="@File">
    <source src="/api/video/stream/@Folder/@File" type="video/mp4" />
    Ваш браузер не підтримує відтворення відео.
</video>

@code {
    [Parameter]
    public string Folder { get; set; }

    [Parameter]
    public string File { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Console.WriteLine("onafterrender");
            await JSRuntime.InvokeVoidAsync("InitPage"); // fetching the video initial seconds
            StateHasChanged();
        }
        await base.OnAfterRenderAsync(firstRender);
    }
}

<script>
    function InitPage() {
        const video = document.getElementById('video-player');
        let initsec = 0;
        const url = `/api/video/initial-seconds/${video.dataset.folder}/${video.dataset.file}`;
        console.log("Fetching initial seconds from server...");
        fetch(url, { headers: { 'Content-Type': 'application/json' } })
            .then(response => response.text())
            .then(res => {
                if (parseInt(res) > 0) {
                    video.currentTime = parseInt(res);
                }
                initsec = parseInt(res);
            })
            .catch(e => console.error(e));

        let timesChanged = 0;
        video.addEventListener("timeupdate", function (e) {
            if (timesChanged < 3 * 20) { // to do one request per +-20 (real 17) seconds
                timesChanged++;
                return;
            }
            timesChanged = 0;
            console.log("Sending time to server...");
            fetch(`${url}?time=${video.currentTime}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' }
            }).catch(e => console.error(e));
        });
    }
</script>