@page "/stream/{Folder}/{File}"

@using CbeViewer.Data
@* @inject TimerService TimerService *@
@InteractiveWebAssembly
@inject IJSRuntime JSRuntime
<h3>StreamVideo</h3>

<video id="video-player" controls style="width: 100%; max-height: 800px; background-color: black;">
    <source src="/api/video/stream/@Folder/@File" type="video/mp4" />
    Ваш браузер не підтримує відтворення відео.
</video>


<script>
    function InitPage() {
        const video = document.getElementById('video-player');
        let initsec = 0;
        const url = '/api/video/initial-seconds/@Folder/@File';
        console.log(url);
        fetch(url, {headers: {'Content-Type': 'application/json'}})
            .then(response => response.text())
            .then(res => {
                if (parseInt(res) > 0) {
                    video.currentTime = parseInt(res);
                }
                initsec = parseInt(res);
            })
            .catch(e => console.error(e));

        window.addEventListener("unload", function (e) {
            if (video.currentTime === 0 || video.currentTime < initsec) {
                return;
            }
            fetch(`${url}?time=${video.currentTime}`, {
                method: 'POST',
                headers: {'Content-Type': 'application/json'}
            }).catch(e => console.error(e));
        });
    }

</script>

@code {
    [Parameter]
    public string Folder { get; set; }
    
    [Parameter]
    public string File { get; set; }

    

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Console.WriteLine("onafterrender");
            await JSRuntime.InvokeVoidAsync("InitPage");
            StateHasChanged();
        }
        await base.OnAfterRenderAsync(firstRender);
    }

}